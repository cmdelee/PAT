<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnplay.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>